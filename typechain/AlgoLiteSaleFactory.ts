/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { AlgoLiteSale } from "./AlgoLiteSale";

export class AlgoLiteSaleFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _mintable: string,
    _privateSaleToken: string,
    overrides?: Overrides
  ): Promise<AlgoLiteSale> {
    return super.deploy(
      _mintable,
      _privateSaleToken,
      overrides || {}
    ) as Promise<AlgoLiteSale>;
  }
  getDeployTransaction(
    _mintable: string,
    _privateSaleToken: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _mintable,
      _privateSaleToken,
      overrides || {}
    );
  }
  attach(address: string): AlgoLiteSale {
    return super.attach(address) as AlgoLiteSale;
  }
  connect(signer: Signer): AlgoLiteSaleFactory {
    return super.connect(signer) as AlgoLiteSaleFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AlgoLiteSale {
    return new Contract(address, _abi, signerOrProvider) as AlgoLiteSale;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IMintable",
        name: "_mintable",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_privateSaleToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "purchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "purchaseWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPublicNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrivateNumber",
        type: "uint256",
      },
    ],
    name: "setSaleNumbers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawMasterTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610cf1380380610cf183398101604081905261002f916100aa565b6100383361005a565b600180556001600160601b0319606092831b8116608052911b1660a0526100fc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100bd57600080fd5b82516100c8816100e4565b60208401519092506100d9816100e4565b809150509250929050565b6001600160a01b03811681146100f957600080fd5b50565b60805160601c60a05160601c610ba761014a600039600081816101fa015281816105d1015281816106660152818161070601526108270152600081816102de01526103f00152610ba76000f3fe6080604052600436106100765760003560e01c806358c8271b1461007b57806364edfbf014610092578063715018a61461009a57806382b07206146100af5780638da5cb5b146100cf5780638e3695b8146100fa578063a0ef91df14610133578063e39f3e4a14610148578063f2fde38b1461015d575b600080fd5b34801561008757600080fd5b5061009061017d565b005b61009061034c565b3480156100a657600080fd5b50610090610475565b3480156100bb57600080fd5b506100906100ca3660046109ff565b6104b0565b3480156100db57600080fd5b506100e46104ea565b6040516100f19190610a21565b60405180910390f35b34801561010657600080fd5b506002546003546004546005546040805194855260208501939093529183015260608201526080016100f1565b34801561013f57600080fd5b506100906104f9565b34801561015457600080fd5b506100906105a2565b34801561016957600080fd5b50610090610178366004610994565b6108ab565b600260015414156101a95760405162461bcd60e51b81526004016101a090610ab4565b60405180910390fd5b6002600155600454600554106101d15760405162461bcd60e51b81526004016101a090610a5e565b6040516323b872dd60e01b8152336004820152306024820152670de0b6b3a764000060448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561024657600080fd5b505af1925050508015610276575060408051601f3d908101601f19168201909252610273918101906109c4565b60015b6102925760405162461bcd60e51b81526004016101a090610a35565b806102af5760405162461bcd60e51b81526004016101a090610a35565b6001600560008282546102c29190610aeb565b90915550506040516335313c2160e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636a62784290610313903390600401610a21565b600060405180830381600087803b15801561032d57600080fd5b505af1158015610341573d6000803e3d6000fd5b505050505060018055565b6002600154141561036f5760405162461bcd60e51b81526004016101a090610ab4565b6002600181905554600354106103975760405162461bcd60e51b81526004016101a090610a5e565b67016345785d8a00003410156103d95760405162461bcd60e51b8152602060048201526007602482015266546f6f206c6f7760c81b60448201526064016101a0565b6040516335313c2160e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636a62784290610425903390600401610a21565b600060405180830381600087803b15801561043f57600080fd5b505af1158015610453573d6000803e3d6000fd5b5050505060016003600082825461046a9190610aeb565b909155505060018055565b3361047e6104ea565b6001600160a01b0316146104a45760405162461bcd60e51b81526004016101a090610a7f565b6104ae6000610944565b565b336104b96104ea565b6001600160a01b0316146104df5760405162461bcd60e51b81526004016101a090610a7f565b600291909155600455565b6000546001600160a01b031690565b60006105036104ea565b6001600160a01b031647619c4090604051600060405180830381858888f193505050503d8060008114610552576040519150601f19603f3d011682016040523d82523d6000602084013e610557565b606091505b505090508061059f5760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b60448201526064016101a0565b50565b600260015414156105c55760405162461bcd60e51b81526004016101a090610ab4565b600260018190555060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561062857600080fd5b505afa15801561063c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066091906109e6565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016106b09190610a21565b60206040518083038186803b1580156106c857600080fd5b505afa1580156106dc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070091906109e6565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231336040518263ffffffff1660e01b81526004016107509190610a21565b60206040518083038186803b15801561076857600080fd5b505afa15801561077c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a091906109e6565b905060006107ae8385610b44565b6107b88385610b25565b6107c29190610b03565b90506000811161080b5760405162461bcd60e51b815260206004820152601460248201527314d95b99195c881d1bdad95b9cc81b995959195960621b60448201526064016101a0565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561087357600080fd5b505af1158015610887573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034191906109c4565b336108b46104ea565b6001600160a01b0316146108da5760405162461bcd60e51b81526004016101a090610a7f565b6001600160a01b03811661093f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101a0565b61059f815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156109a657600080fd5b81356001600160a01b03811681146109bd57600080fd5b9392505050565b6000602082840312156109d657600080fd5b815180151581146109bd57600080fd5b6000602082840312156109f857600080fd5b5051919050565b60008060408385031215610a1257600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6020808252600f908201526e21b0b73737ba103a3930b739b332b960891b604082015260600190565b6020808252600790820152664e6f2073616c6560c81b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60008219821115610afe57610afe610b5b565b500190565b600082610b2057634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610b3f57610b3f610b5b565b500290565b600082821015610b5657610b56610b5b565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208208a827f42123ebe3a494f450f3160ef462047850e06c9fe02eee444b21dcc164736f6c63430008060033";
