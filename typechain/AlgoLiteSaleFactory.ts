/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { AlgoLiteSale } from "./AlgoLiteSale";

export class AlgoLiteSaleFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _mintable: string,
    _privateSaleToken: string,
    overrides?: Overrides
  ): Promise<AlgoLiteSale> {
    return super.deploy(
      _mintable,
      _privateSaleToken,
      overrides || {}
    ) as Promise<AlgoLiteSale>;
  }
  getDeployTransaction(
    _mintable: string,
    _privateSaleToken: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _mintable,
      _privateSaleToken,
      overrides || {}
    );
  }
  attach(address: string): AlgoLiteSale {
    return super.attach(address) as AlgoLiteSale;
  }
  connect(signer: Signer): AlgoLiteSaleFactory {
    return super.connect(signer) as AlgoLiteSaleFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AlgoLiteSale {
    return new Contract(address, _abi, signerOrProvider) as AlgoLiteSale;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IMintable",
        name: "_mintable",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_privateSaleToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "purchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "purchaseWithToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPublicNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrivateNumber",
        type: "uint256",
      },
    ],
    name: "setSaleNumbers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawMasterTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610c85380380610c8583398101604081905261002f916100aa565b6100383361005a565b600180556001600160601b0319606092831b8116608052911b1660a0526100fc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100bd57600080fd5b82516100c8816100e4565b60208401519092506100d9816100e4565b809150509250929050565b6001600160a01b03811681146100f957600080fd5b50565b60805160601c60a05160601c610b3b61014a600039600081816101c50152818161059c01528181610631015281816106d101526107f20152600081816102a901526103e80152610b3b6000f3fe6080604052600436106100765760003560e01c806358c8271b1461007b57806364edfbf014610085578063715018a61461008d57806382b07206146100a25780638da5cb5b146100c25780638e3695b8146100ed578063a0ef91df14610126578063e39f3e4a1461013b578063f2fde38b14610150575b600080fd5b610083610170565b005b610083610314565b34801561009957600080fd5b5061008361046d565b3480156100ae57600080fd5b506100836100bd3660046109ca565b6104a6565b3480156100ce57600080fd5b506100d76104e0565b6040516100e491906109ec565b60405180910390f35b3480156100f957600080fd5b506002546003546004546005546040805194855260208501939093529183015260608201526080016100e4565b34801561013257600080fd5b506100836104ef565b34801561014757600080fd5b50610083610598565b34801561015c57600080fd5b5061008361016b36600461095f565b610876565b6004546005541061019c5760405162461bcd60e51b815260040161019390610a29565b60405180910390fd5b6040516323b872dd60e01b8152336004820152306024820152670de0b6b3a764000060448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561021157600080fd5b505af1925050508015610241575060408051601f3d908101601f1916820190925261023e9181019061098f565b60015b61025d5760405162461bcd60e51b815260040161019390610a00565b8061027a5760405162461bcd60e51b815260040161019390610a00565b60016005600082825461028d9190610a7f565b90915550506040516335313c2160e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636a627842906102de9033906004016109ec565b600060405180830381600087803b1580156102f857600080fd5b505af115801561030c573d6000803e3d6000fd5b50505050505b565b600260015414156103675760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610193565b60026001819055546003541061038f5760405162461bcd60e51b815260040161019390610a29565b67016345785d8a00003410156103d15760405162461bcd60e51b8152602060048201526007602482015266546f6f206c6f7760c81b6044820152606401610193565b6040516335313c2160e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636a6278429061041d9033906004016109ec565b600060405180830381600087803b15801561043757600080fd5b505af115801561044b573d6000803e3d6000fd5b505050506001600360008282546104629190610a7f565b909155505060018055565b336104766104e0565b6001600160a01b03161461049c5760405162461bcd60e51b815260040161019390610a4a565b610312600061090f565b336104af6104e0565b6001600160a01b0316146104d55760405162461bcd60e51b815260040161019390610a4a565b600291909155600455565b6000546001600160a01b031690565b60006104f96104e0565b6001600160a01b031647619c4090604051600060405180830381858888f193505050503d8060008114610548576040519150601f19603f3d011682016040523d82523d6000602084013e61054d565b606091505b50509050806105955760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606401610193565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105f357600080fd5b505afa158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b91906109b1565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040161067b91906109ec565b60206040518083038186803b15801561069357600080fd5b505afa1580156106a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cb91906109b1565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231336040518263ffffffff1660e01b815260040161071b91906109ec565b60206040518083038186803b15801561073357600080fd5b505afa158015610747573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076b91906109b1565b905060006107798385610ad8565b6107838385610ab9565b61078d9190610a97565b9050600081116107d65760405162461bcd60e51b815260206004820152601460248201527314d95b99195c881d1bdad95b9cc81b995959195960621b6044820152606401610193565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561083e57600080fd5b505af1158015610852573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030c919061098f565b3361087f6104e0565b6001600160a01b0316146108a55760405162461bcd60e51b815260040161019390610a4a565b6001600160a01b03811661090a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610193565b610595815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561097157600080fd5b81356001600160a01b038116811461098857600080fd5b9392505050565b6000602082840312156109a157600080fd5b8151801515811461098857600080fd5b6000602082840312156109c357600080fd5b5051919050565b600080604083850312156109dd57600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6020808252600f908201526e21b0b73737ba103a3930b739b332b960891b604082015260600190565b6020808252600790820152664e6f2073616c6560c81b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610a9257610a92610aef565b500190565b600082610ab457634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610ad357610ad3610aef565b500290565b600082821015610aea57610aea610aef565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122028d9f1cf7e6428056c30824af9b04a10ca0ff68a24fe3c20753bb4607de2197064736f6c63430008060033";
