/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Erc721 } from "./Erc721";

export class Erc721Factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides
  ): Promise<Erc721> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<Erc721>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): Erc721 {
    return super.attach(address) as Erc721;
  }
  connect(signer: Signer): Erc721Factory {
    return super.connect(signer) as Erc721Factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Erc721 {
    return new Contract(address, _abi, signerOrProvider) as Erc721;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001497380380620014978339810160408190526200003491620001c5565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61120580620002926000396000f3fe608060405234801561001057600080fd5b50600436106100bf5760003560e01c80636352211e1161007c5780636352211e1461016757806370a082311461017a57806395d89b411461019b578063a22cb465146101a3578063b88d4fde146101b6578063c87b56dd146101c9578063e985e9c5146101dc57600080fd5b806301ffc9a7146100c457806306fdde03146100ec578063081812fc14610101578063095ea7b31461012c57806323b872dd1461014157806342842e0e14610154575b600080fd5b6100d76100d2366004610ee4565b6101ef565b60405190151581526020015b60405180910390f35b6100f4610241565b6040516100e39190610fcf565b61011461010f366004610f1e565b6102d3565b6040516001600160a01b0390911681526020016100e3565b61013f61013a366004610eba565b610360565b005b61013f61014f366004610d66565b610471565b61013f610162366004610d66565b6104a2565b610114610175366004610f1e565b6104bd565b61018d610188366004610d18565b610534565b6040519081526020016100e3565b6100f46105bb565b61013f6101b1366004610e7e565b6105ca565b61013f6101c4366004610da2565b61068b565b6100f46101d7366004610f1e565b6106c3565b6100d76101ea366004610d33565b61079b565b60006001600160e01b031982166380ac58cd60e01b148061022057506001600160e01b03198216635b5e139f60e01b145b8061023b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610250906110f4565b80601f016020809104026020016040519081016040528092919081815260200182805461027c906110f4565b80156102c95780601f1061029e576101008083540402835291602001916102c9565b820191906000526020600020905b8154815290600101906020018083116102ac57829003601f168201915b5050505050905090565b60006102de826107c9565b6103445760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061036b826104bd565b9050806001600160a01b0316836001600160a01b031614156103d95760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161033b565b336001600160a01b03821614806103f557506103f5813361079b565b6104625760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b606482015260840161033b565b61046c83836107e6565b505050565b61047b3382610854565b6104975760405162461bcd60e51b815260040161033b90611034565b61046c83838361091e565b61046c8383836040518060200160405280600081525061068b565b6000818152600260205260408120546001600160a01b03168061023b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161033b565b60006001600160a01b03821661059f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161033b565b506001600160a01b031660009081526003602052604090205490565b606060018054610250906110f4565b6001600160a01b03821633141561061f5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161033b565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106953383610854565b6106b15760405162461bcd60e51b815260040161033b90611034565b6106bd84848484610abe565b50505050565b60606106ce826107c9565b6107325760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161033b565b600061074960408051602081019091526000815290565b905060008151116107695760405180602001604052806000815250610794565b8061077384610af1565b604051602001610784929190610f63565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061081b826104bd565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061085f826107c9565b6108c05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161033b565b60006108cb836104bd565b9050806001600160a01b0316846001600160a01b031614806109065750836001600160a01b03166108fb846102d3565b6001600160a01b0316145b806109165750610916818561079b565b949350505050565b826001600160a01b0316610931826104bd565b6001600160a01b0316146109995760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161033b565b6001600160a01b0382166109fb5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161033b565b610a066000826107e6565b6001600160a01b0383166000908152600360205260408120805460019290610a2f9084906110b1565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a5d908490611085565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610ac984848461091e565b610ad584848484610bef565b6106bd5760405162461bcd60e51b815260040161033b90610fe2565b606081610b155750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b3f5780610b298161112f565b9150610b389050600a8361109d565b9150610b19565b60008167ffffffffffffffff811115610b5a57610b5a6111a0565b6040519080825280601f01601f191660200182016040528015610b84576020820181803683370190505b5090505b841561091657610b996001836110b1565b9150610ba6600a8661114a565b610bb1906030611085565b60f81b818381518110610bc657610bc661118a565b60200101906001600160f81b031916908160001a905350610be8600a8661109d565b9450610b88565b60006001600160a01b0384163b15610cf157604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c33903390899088908890600401610f92565b602060405180830381600087803b158015610c4d57600080fd5b505af1925050508015610c7d575060408051601f3d908101601f19168201909252610c7a91810190610f01565b60015b610cd7573d808015610cab576040519150601f19603f3d011682016040523d82523d6000602084013e610cb0565b606091505b508051610ccf5760405162461bcd60e51b815260040161033b90610fe2565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610916565b506001949350505050565b80356001600160a01b0381168114610d1357600080fd5b919050565b600060208284031215610d2a57600080fd5b61079482610cfc565b60008060408385031215610d4657600080fd5b610d4f83610cfc565b9150610d5d60208401610cfc565b90509250929050565b600080600060608486031215610d7b57600080fd5b610d8484610cfc565b9250610d9260208501610cfc565b9150604084013590509250925092565b60008060008060808587031215610db857600080fd5b610dc185610cfc565b9350610dcf60208601610cfc565b925060408501359150606085013567ffffffffffffffff80821115610df357600080fd5b818701915087601f830112610e0757600080fd5b813581811115610e1957610e196111a0565b604051601f8201601f19908116603f01168101908382118183101715610e4157610e416111a0565b816040528281528a6020848701011115610e5a57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610e9157600080fd5b610e9a83610cfc565b915060208301358015158114610eaf57600080fd5b809150509250929050565b60008060408385031215610ecd57600080fd5b610ed683610cfc565b946020939093013593505050565b600060208284031215610ef657600080fd5b8135610794816111b6565b600060208284031215610f1357600080fd5b8151610794816111b6565b600060208284031215610f3057600080fd5b5035919050565b60008151808452610f4f8160208601602086016110c8565b601f01601f19169290920160200192915050565b60008351610f758184602088016110c8565b835190830190610f898183602088016110c8565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610fc590830184610f37565b9695505050505050565b6020815260006107946020830184610f37565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600082198211156110985761109861115e565b500190565b6000826110ac576110ac611174565b500490565b6000828210156110c3576110c361115e565b500390565b60005b838110156110e35781810151838201526020016110cb565b838111156106bd5750506000910152565b600181811c9082168061110857607f821691505b6020821081141561112957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156111435761114361115e565b5060010190565b60008261115957611159611174565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146111cc57600080fd5b5056fea26469706673582212207152020219cc76759ca65c2c5d2771a7eeb30bebd0710193b3413df224d32cdf64736f6c63430008060033";
