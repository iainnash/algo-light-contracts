/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { AlgoLightSale } from "./AlgoLightSale";

export class AlgoLightSaleFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _mintable: string,
    _privateSaleToken: string,
    overrides?: Overrides
  ): Promise<AlgoLightSale> {
    return super.deploy(
      _mintable,
      _privateSaleToken,
      overrides || {}
    ) as Promise<AlgoLightSale>;
  }
  getDeployTransaction(
    _mintable: string,
    _privateSaleToken: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(
      _mintable,
      _privateSaleToken,
      overrides || {}
    );
  }
  attach(address: string): AlgoLightSale {
    return super.attach(address) as AlgoLightSale;
  }
  connect(signer: Signer): AlgoLightSaleFactory {
    return super.connect(signer) as AlgoLightSaleFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AlgoLightSale {
    return new Contract(address, _abi, signerOrProvider) as AlgoLightSale;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IMintable",
        name: "_mintable",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_privateSaleToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "purchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "purchaseWithToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPublicNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrivateNumber",
        type: "uint256",
      },
    ],
    name: "setSaleNumbers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107a43803806107a483398101604081905261002f916100b9565b61003833610069565b600180546001600160a01b039384166001600160a01b0319918216179091556002805492909316911617905561010b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100cc57600080fd5b82516100d7816100f3565b60208401519092506100e8816100f3565b809150509250929050565b6001600160a01b038116811461010857600080fd5b50565b61068a8061011a6000396000f3fe6080604052600436106100605760003560e01c806358c8271b1461006557806364edfbf01461006f578063715018a61461007757806382b072061461008c5780638da5cb5b146100ac5780638e3695b8146100d7578063f2fde38b14610110575b600080fd5b61006d610130565b005b61006d6102fd565b34801561008357600080fd5b5061006d6103de565b34801561009857600080fd5b5061006d6100a73660046105a2565b610417565b3480156100b857600080fd5b506100c1610451565b6040516100ce91906105c4565b60405180910390f35b3480156100e357600080fd5b506003546004546005546006546040805194855260208501939093529183015260608201526080016100ce565b34801561011c57600080fd5b5061006d61012b366004610550565b610460565b6006546005541061015c5760405162461bcd60e51b8152600401610153906105d8565b60405180910390fd5b6002546001600160a01b03166323b872dd33610176610451565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152670de0b6b3a76400006044820152606401602060405180830381600087803b1580156101cc57600080fd5b505af19250505080156101fc575060408051601f3d908101601f191682019092526101f991810190610580565b60015b6102405760405162461bcd60e51b815260206004820152601560248201527421b0b73737ba103a3930b739b332b9103a37b5b2b760591b6044820152606401610153565b8061027f5760405162461bcd60e51b815260206004820152600f60248201526e21b0b73737ba103a3930b739b332b960891b6044820152606401610153565b600160066000828254610292919061062e565b90915550506001546040516335313c2160e11b81526001600160a01b0390911690636a627842906102c79033906004016105c4565b600060405180830381600087803b1580156102e157600080fd5b505af11580156102f5573d6000803e3d6000fd5b50505050505b565b600454600354106103205760405162461bcd60e51b8152600401610153906105d8565b67016345785d8a00003414156103625760405162461bcd60e51b8152602060048201526007602482015266546f6f206c6f7760c81b6044820152606401610153565b6001546040516335313c2160e11b81526001600160a01b0390911690636a627842906103929033906004016105c4565b600060405180830381600087803b1580156103ac57600080fd5b505af11580156103c0573d6000803e3d6000fd5b505050506001600460008282546103d7919061062e565b9091555050565b336103e7610451565b6001600160a01b03161461040d5760405162461bcd60e51b8152600401610153906105f9565b6102fb6000610500565b33610420610451565b6001600160a01b0316146104465760405162461bcd60e51b8152600401610153906105f9565b600391909155600555565b6000546001600160a01b031690565b33610469610451565b6001600160a01b03161461048f5760405162461bcd60e51b8152600401610153906105f9565b6001600160a01b0381166104f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610153565b6104fd81610500565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561056257600080fd5b81356001600160a01b038116811461057957600080fd5b9392505050565b60006020828403121561059257600080fd5b8151801515811461057957600080fd5b600080604083850312156105b557600080fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6020808252600790820152664e6f2073616c6560c81b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561064f57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212200059b4ee6929e216e4054eab8f0af459127dc7a6a6c86743edfa364e4c82afe664736f6c63430008060033";
